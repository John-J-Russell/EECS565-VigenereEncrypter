/* @AUTHOR: John Russell, j362r647@ku.edu
 * @DATE: 25 September 2016
 * @FILENAME: VigenereEncrypterHelper.java
 * @PURPOSE: An object that takes in plaintext and a key,
 * 			 returns ciphertext.
 */
public class VigenereEncrypterHelper 
{
	private char[] m_plaintext;
	private char[] m_key;
	
	/* @PRE:	Is called with sanitized input, where each char[] has no spaces
	 * 			or symbols, and is all uppercase.
	 * @POST:	The object has its member variables filled
	 * @RETURN:	none
	 */
	VigenereEncrypterHelper(char[] plaintextInput, char[] keyInput)
	{
		m_plaintext = plaintextInput;
		m_key = keyInput;
	}
	
	/* @PRE:	VigenereEncrypterHelper object has valid key and plaintext
	 * @POST:	none
	 * @RETURN:	a character array that has been encrypted with the proper
	 * 			key and plaintext
	 */
	char[] encrypt()
	{
		
	}
	
	/* @PRE:	VigenereEncrypterHelper object exists, plaintextInput is 
	 * 			sanitized.
	 * @POST:	m_plaintext is set to the plaintextInput
	 * @RETURN:	none
	 */
	public void setPlainText(char[] plaintextInput)
	{
		m_plaintext = plaintextInput;
	}
	
	/* @PRE:	VigenereEncrypterHelper object exists
	 * @POST:	none
	 * @RETURN:	the m_plaintext this object currently holds
	 */
	public char[] getPlainText()
	{
		return(m_plaintext);
	}
	
	/* @PRE:	VigenereEncrypterHelper object exists, keyInput is 
	 * 			sanitized.
	 * @POST:	m_key is set to the keyInput
	 * @RETURN:	none
	 */
	public void setKey(char[] keyInput)
	{
		m_key = keyInput;
	}
	
	public char[] getKey()
	{
		return(m_key);
	}
	
}
